

#################################################################
#
# Settaggi relativi al server locale
#
#################################################################
server.port=8889
## per default CORS e' abilitato (false)
#server.cors.disable=false
#res.header("Access-Control-Allow-Origin", origin);
server.cors.allow.origin=*
#res.header("Access-Control-Request-Method", methods);
server.cors.request.method=*
#res.header("Access-Control-Allow-Headers", headers);
server.cors.allow.headers=*

#################################################################
#
# Settaggi relativi al API esposto dal server
#
#################################################################
# la parte del url dopo la porta ie http://localhost:8080/[route-name]/
app.route.name=gm
# questo dovrebbe essere il valore del file to post, se e' statico
app.file.to.post=pom.xml


#################################################################
#
# Settaggi relativi alla richiesta per caricare l'immagine
#
#################################################################

# url verso il quale si deve fare il POST
app.remote.url=http://localhost:8080/api/item/img
# stato http restituito dalla richiesta che indica che la chiamata e' andata a buon fine
app.remote.status.expected=200
# Ho implementato soltanto Basic/Digest authentication ma puo' essere facilmente esteso; altrimenti si usa direttamente app.remote.auth.header
app.remote.auth.type=Basic
app.remote.auth.username=matt
app.remote.auth.password=test

# per flessibilita' si puo' impostare direttamente l'header di usare per authenticazione
#app.remote.auth.header=Authorization
# il valore del app.remote.auth.header
#app.remote.auth.header.value=token dsafsafeakfjlasvjsavaslk

